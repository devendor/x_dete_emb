<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>cms</category>
        <client_script/>
        <description/>
        <direct>true</direct>
        <endpoint>x_dete_clone3_about_this_app.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly xmlns:j="jelly:core" xmlns:g="glide" trim="false">
  <html>

    <head>
      <link href="bda0637641f42ea56c40796865f8cab3.cssdbx?v=${gs.getProperty('glide.builddate')}" rel="stylesheet" type="text/css" />
      <link href="8f340f116f914a4f44ec8cf788f0e473.cssdbx?v=${gs.getProperty('glide.builddate')}" rel="stylesheet" type="text/css" />
    </head>
    <body>
      <div class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="containor">
          <div class="navbar-brand">Embedded Content Application by Devendor Tech LLC</div>
        </div>
      </div>

      <div class="container">
        <div class="row">
          <div class="col-me">
            <h3>Description</h3>
            <P>The Embedded Content Application allows servicenow developers to easily access a read only copy of embedded
             jelly form, jelly template, and ui javascript content that is otherwise hidden as a file structure under the hood.</P>
            <P>This is accomplished by finding the data and copying it into a series of tables in the Embedded Content scoped
             application. Of course the embedded content is protected from scoped applications by denying access to some
             APIs needed to find and access this content.</P>
            <P>The Embedded Content app works around global API restrictions by using a$[AMP]nbsp;<a href="sys_script_include.do?sys_id=36d056a1db07330098cbde82ca9619c4">
              global sys_script_include</a>$[AMP]nbsp;and 
             sys_script_action that responds to sysevents sent via $[AMP]nbsp;<A HREF="sys_ui_action.do?sys_id=17f365e3e8ef53fda5dbe1199a63c322">UI actions</A>$[AMP]nbsp; from the Scoped Application counterpart. The two
             Global components find the content, and update the tables with a copy of the hidden content files then parses them to find even more and map our relationships.</P>
             <P>The content is then made more useful with some fancy formatting, related lists, and code search source definitions for exploring content dependencies and bundles.</P>
          </div>
        </div>

        <div class="row">
          <div class="col-me">
            <h3>Release Notes</h3>
            <p>Version 3.0</p>
            <ul>
              <li>Compatibility fixes for Orlando and Paris</li>
              <li>Replaced complicated workaround with scoped $[AMP]nbsp;<a href="sys_script_include.do?sys_id=132a433f72cd8572b4ba1f2c10545ca3">EventUtil</a>$[AMP]nbsp; to submit events without stacking.</li>
              <li>Schema changes: Replace glidefunction with calculation fields (orlando / paris isssues with glidefunc on extended table)</li>
              <li>Replaced two update set install with batched update set for deployment.</li>
              <li>Configurable properties.</li>
              <li>Added to codesearch sources.</li>
              <li>Added log module.</li>
              <li>Added events module.</li>
              <li>Various bugfixes and cleanup.</li>
            </ul>
            <p>Version 2.0</p>
            <ul>
              <li>Bugfix: Broken plugin reference links in some list views. The v_plugins view is incomplete. Switched to sys_package for refs.</li>
              <li>Scope has been removed from some list views on plugin files, sys_package is more complete, but lacks a simple scope definition.</li>
              <li>Bugfix: Way more content! The app now finds way more javascript and css files.</li>
              <li>Feature: We also grab the non minnified version in most circumstances.</li>
              <li>Feature: New m2m relationships added "Requires", and "Required By" related lists to form views mapping relationships of embedded content.</li>
              <li>M2M Requires / Required By is populated by Plugin UI Javascript and Plugin UI CSS sync jobs. If this is missing on upgrade, re-run sync!</li>
              <li>Exposed parent tables: Various "All" tables for easier searching or syncing.</li>
            </ul>
          </div>
        </div>

        <div class="row">
          <div class="col-me">
            <h3>Using the application.</h3>
            <ol>
              <li>Browse to the Embedded Content Module</li>
              <li>Select any of the content tables.</li>
              <li>Note: to sync all content types, use All Embedded Content root table.</li>
              <li>Use the "Sync Content" button to import or update the visible copy of the embedded content.</li>
              <li>Wait a while. You can check $[AMP]nbsp;<b>Embedded Content $[AMP]gt; Events</b>$[AMP]nbsp; to see what is pending as it works.</li>
              <li>If you hit "Sync Content" again before it finishes, it will just warn of any jobs still queued or running and only submit jobs for those not already pending.</li>
              <li>Select any of the embedded content records to view records.</li>
              <li>Navigate to sys_plugins_list.do and select your favorite plugin. The form view should have new related lists for embedded content.</li>
            </ol>
          </div>
        </div>

        <div class="row">
          <div class="col-me">
            <h3>What is Embedded Content?</h3>
            The embedded content exposed by the app consists of variations on jelly/xml content, client javascript, and css files that drive much of the servicenow UI.
            <dl>
              <dt>Platform JForms</dt>
              <dd>This content exist relative to webroot in ./ui.jforms. It is roughly an embedded equivelent to a UI Page.</dd>
              <dt>Platform JTemplates</dt>
              <dd>This content exist relative to webroot in ./ui.jtemplates. It is roughly an embedded equivelent to a UI Macro.</dd>
              <dt>Platform UI Javascript</dt>
              <dd>This content exist relative to webroot in ./scripts. This is an unobfuscated copy of client side javascript runs in you browser.
                 This is typically stripped of comments and bundled or minified into various js_includes...js files on a schedule and represent the
                 individual files noted by the /* RESOURCE: ... */ tags in the include. Note: setting sys_properties glide.ui.js_includes=false will
                 modify this behavior to make development a little easier.
              </dd>
              <dt>Plugin ... (global)</dt>
              <dd>
                Plugins in the global scope show up as files under
                <i>%webroot%</i>
                /plugins/
                <i>%v_plugin.id%</i>
                /ui.html/
                <i>%content_type%</i>$[AMP]nbsp;
                where
                <i>%content_type%</i>$[AMP]nbsp;
                is one of scripts, ui.jforms, ui.jforms, or styles relating to the platform content types above with
              the additional styles subdirectory that contains cascading style sheets.
              </dd>
              <dt>Plugin ... (scoped)</dt>
              <dd>These well hidden files don't show up under the global filesystem anywhere that I can find.  They are presumably present in 
                scoped environment, but the APIs to access files are not there.  They are accessible via SecurelyAccess if permissions and other
                security tests allow it.  One test is clearly a substring or regex match against the file path that bans some strings like
                "classes" and by realative paths from ui.html.
             </dd>
              <dt>Indirect Content</dt>
              <dd>Particularly with javascript, direct access is entirely reliant on SecurelyAccess or luck with cache which falls down when file paths
               contain banned strings. To work around this, the script include falls back to more slight of hand by using jelly to pull in the rendered
               version of the script. Then it parses the RESOURCE: tags back into "// include ..." lines, and passes it through beautify_js to clean it
               up a bit since rendering collapses a lot of white space and removes the comments. The exception is large files. The process is a
               bit expensive and the huge files are largely publically available libraries anyway.
             </dd>
            </dl>
          </div>
        </div>

        <div class="row">
          <div class="col-me">
            <h3>Application Roles</h3>
            <P>The application contains two roles</P>
            <dl>
              <dt> x_dete_clone3.edded_content_admin</dt>
              <dd>
              Allows updating and creating the cached records through the expose Sync Content button on list views for embedded content.
            </dd>
              <dt>x_dete_clone3.edded_content_admin</dt>
              <dd>Provides basic read access to the content.</dd>
            </dl>
          </div>
        </div>

        <div class="row">
          <div class="col-me">
            <h3>About Devendor Tech LLC</h3>
            <P>Devendor Tech LLC is just Ray Ferguson for now.
            It was a technology partner, but I've since let that lapse. The original goal was to deliver scoped applications through the servicenow store, but I was
            beat to market as I strayed from minimal viable product and lost some time consulting to keep bills payed. I'm currently a consulting servicenow developer
            with Devendor Tech LLC more of a side bet that I can still do work under. I may someday restart the partnership with a new product, but it is not a primary focus.
            </P>
            <P>If you like my work, feel free to send me some. I would love to see what we can build together!</P>

            <div class="card text-white bg-info mb-3" style="max-width: 20rem;">
              <div class="card-header" onclick="window.open('https://www.devendortech.com','_blank', 'width=992')" title="devendortech.com" style="cursor: pointer;">
                Contact Devendor Tech
                <img src="983022a529242159213528d487367978.iix" class="rounded float-right" />
              </div>
              <div class="card-body">
                <ul class="list-group list-group-flush">
                  <li class="list-group-item bg-info" style="cursor: pointer;" onclick="window.open('mailto:ray.ferguson@devendortech.com')" title="email">Ray.Ferguson@DevendorTech.com</li>
                  <li class="list-group-item bg-info" style="cursor: pointer;" title="call" onclick="window.open('tel:+16089608090')" rel="nofollow">Phone: 1 608.960.8090</li>
                  <li class="list-group-item bg-info" style="cursor: pointer;" onclick="window.open('https://www.linkedin.com/in/ray-ferguson-1419395/', '_blank', 'width=992')" title="social">@linkedin</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </body>
  </html>
</j:jelly>
]]></html>
        <name>about_this_app</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>ray.ferguson</sys_created_by>
        <sys_created_on>2019-08-14 21:24:29</sys_created_on>
        <sys_id>310918578a38a1db696ebe5b645f52f6</sys_id>
        <sys_mod_count>135</sys_mod_count>
        <sys_name>about_this_app</sys_name>
        <sys_package display_value="Embedded Content" source="x_dete_clone3">b112a96e2eec70243f98dda0960411dc</sys_package>
        <sys_policy/>
        <sys_scope display_value="Embedded Content">b112a96e2eec70243f98dda0960411dc</sys_scope>
        <sys_update_name>sys_ui_page_310918578a38a1db696ebe5b645f52f6</sys_update_name>
        <sys_updated_by>rferguson</sys_updated_by>
        <sys_updated_on>2020-11-28 17:27:52</sys_updated_on>
    </sys_ui_page>
</record_update>
